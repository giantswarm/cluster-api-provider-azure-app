- op: replace
  path: /spec/versions/6/schema
  value:
    openAPIV3Schema:
      description: |-
        Generator information:
        - Generated from: /containerservice/resource-manager/Microsoft.ContainerService/aks/preview/2023-11-02-preview/managedClusters.json
        - ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools/{agentPoolName}
      properties:
        apiVersion:
          description: |-
            APIVersion defines the versioned schema of this representation of an object.
            Servers should convert recognized schemas to the latest internal value, and
            may reject unrecognized values.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          type: string
        kind:
          description: |-
            Kind is a string value representing the REST resource this object represents.
            Servers may infer this from the endpoint the client submits requests to.
            Cannot be updated.
            In CamelCase.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          type: string
        metadata:
          type: object
        spec:
          properties:
            artifactStreamingProfile:
              description: 'ArtifactStreamingProfile: Configuration for using artifact streaming on AKS.'
              properties:
                enabled:
                  type: boolean
              type: object
            availabilityZones:
              description: |-
                AvailabilityZones: The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType
                property is 'VirtualMachineScaleSets'.
              items:
                type: string
              type: array
            azureName:
              description: |-
                AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it
                doesn't have to be.
              maxLength: 12
              minLength: 1
              pattern: ^[a-z][a-z0-9]{0,11}$
              type: string
            capacityReservationGroupReference:
              description: 'CapacityReservationGroupReference: AKS will associate the specified agent pool with the Capacity Reservation Group.'
              properties:
                armId:
                  description: |-
                    ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                    ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                  pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                  type: string
                group:
                  description: Group is the Kubernetes group of the resource.
                  type: string
                kind:
                  description: Kind is the Kubernetes kind of the resource.
                  type: string
                name:
                  description: Name is the Kubernetes name of the resource.
                  type: string
              type: object
            count:
              description: |-
                Count: Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive)
                for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.
              type: integer
            creationData:
              description: |-
                CreationData: CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using
                a snapshot.
              properties:
                sourceResourceReference:
                  description: ResourceReference represents a resource reference, either to a Kubernetes resource or directly to an Azure resource via ARMID
                  properties:
                    armId:
                      description: |-
                        ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                        The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                        ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                      pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                      type: string
                    group:
                      description: Group is the Kubernetes group of the resource.
                      type: string
                    kind:
                      description: Kind is the Kubernetes kind of the resource.
                      type: string
                    name:
                      description: Name is the Kubernetes name of the resource.
                      type: string
                  type: object
              type: object
            enableAutoScaling:
              description: 'EnableAutoScaling: Whether to enable auto-scaler'
              type: boolean
            enableCustomCATrust:
              description: |-
                EnableCustomCATrust: When set to true, AKS adds a label to the node indicating that the feature is enabled and deploys a
                daemonset along with host services to sync custom certificate authorities from user-provided list of base64 encoded
                certificates into node trust stores. Defaults to false.
              type: boolean
            enableEncryptionAtHost:
              description: |-
                EnableEncryptionAtHost: This is only supported on certain VM sizes and in certain Azure regions. For more information,
                see: https://docs.microsoft.com/azure/aks/enable-host-encryption
              type: boolean
            enableFIPS:
              description: |-
                EnableFIPS: See [Add a FIPS-enabled node
                pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more
                details.
              type: boolean
            enableNodePublicIP:
              description: |-
                EnableNodePublicIP: Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses.
                A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine
                to minimize hops. For more information see [assigning a public IP per
                node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The
                default is false.
              type: boolean
            enableUltraSSD:
              description: 'EnableUltraSSD: Whether to enable UltraSSD'
              type: boolean
            gpuInstanceProfile:
              description: 'GpuInstanceProfile: GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.'
              enum:
                - MIG1g
                - MIG2g
                - MIG3g
                - MIG4g
                - MIG7g
              type: string
            gpuProfile:
              description: 'GpuProfile: The GPU settings of an agent pool.'
              properties:
                installGPUDriver:
                  type: boolean
              type: object
            hostGroupReference:
              description: |-
                HostGroupReference: This is of the form:
                /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}.
                For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).
              properties:
                armId:
                  description: |-
                    ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                    ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                  pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                  type: string
                group:
                  description: Group is the Kubernetes group of the resource.
                  type: string
                kind:
                  description: Kind is the Kubernetes kind of the resource.
                  type: string
                name:
                  description: Name is the Kubernetes name of the resource.
                  type: string
              type: object
            kubeletConfig:
              description: 'KubeletConfig: The Kubelet configuration on the agent pool nodes.'
              properties:
                allowedUnsafeSysctls:
                  items:
                    type: string
                  type: array
                containerLogMaxFiles:
                  minimum: 2
                  type: integer
                containerLogMaxSizeMB:
                  type: integer
                cpuCfsQuota:
                  type: boolean
                cpuCfsQuotaPeriod:
                  type: string
                cpuManagerPolicy:
                  type: string
                failSwapOn:
                  type: boolean
                imageGcHighThreshold:
                  type: integer
                imageGcLowThreshold:
                  type: integer
                podMaxPids:
                  type: integer
                topologyManagerPolicy:
                  type: string
              type: object
            kubeletDiskType:
              description: |-
                KubeletDiskType: Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral
                storage.
              enum:
                - OS
                - Temporary
              type: string
            linuxOSConfig:
              description: 'LinuxOSConfig: The OS configuration of Linux agent nodes.'
              properties:
                swapFileSizeMB:
                  type: integer
                sysctls:
                  properties:
                    fsAioMaxNr:
                      type: integer
                    fsFileMax:
                      type: integer
                    fsInotifyMaxUserWatches:
                      type: integer
                    fsNrOpen:
                      type: integer
                    kernelThreadsMax:
                      type: integer
                    netCoreNetdevMaxBacklog:
                      type: integer
                    netCoreOptmemMax:
                      type: integer
                    netCoreRmemDefault:
                      type: integer
                    netCoreRmemMax:
                      type: integer
                    netCoreSomaxconn:
                      type: integer
                    netCoreWmemDefault:
                      type: integer
                    netCoreWmemMax:
                      type: integer
                    netIpv4IpLocalPortRange:
                      type: string
                    netIpv4NeighDefaultGcThresh1:
                      type: integer
                    netIpv4NeighDefaultGcThresh2:
                      type: integer
                    netIpv4NeighDefaultGcThresh3:
                      type: integer
                    netIpv4TcpFinTimeout:
                      type: integer
                    netIpv4TcpKeepaliveProbes:
                      type: integer
                    netIpv4TcpKeepaliveTime:
                      type: integer
                    netIpv4TcpMaxSynBacklog:
                      type: integer
                    netIpv4TcpMaxTwBuckets:
                      type: integer
                    netIpv4TcpTwReuse:
                      type: boolean
                    netIpv4TcpkeepaliveIntvl:
                      maximum: 90
                      minimum: 10
                      type: integer
                    netNetfilterNfConntrackBuckets:
                      maximum: 524288
                      minimum: 65536
                      type: integer
                    netNetfilterNfConntrackMax:
                      maximum: 2097152
                      minimum: 131072
                      type: integer
                    vmMaxMapCount:
                      type: integer
                    vmSwappiness:
                      type: integer
                    vmVfsCachePressure:
                      type: integer
                  type: object
                transparentHugePageDefrag:
                  type: string
                transparentHugePageEnabled:
                  type: string
              type: object
            maxCount:
              description: 'MaxCount: The maximum number of nodes for auto-scaling'
              type: integer
            maxPods:
              description: 'MaxPods: The maximum number of pods that can run on a node.'
              type: integer
            messageOfTheDay:
              description: |-
                MessageOfTheDay: A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of
                the message of the day for Linux nodes. It must not be specified for Windows nodes. It must be a static string (i.e.,
                will be printed raw and not be executed as a script).
              type: string
            minCount:
              description: 'MinCount: The minimum number of nodes for auto-scaling'
              type: integer
            mode:
              description: |-
                Mode: A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool
                restrictions  and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools
              enum:
                - System
                - User
              type: string
            networkProfile:
              description: 'NetworkProfile: Network-related settings of an agent pool.'
              properties:
                allowedHostPorts:
                  items:
                    properties:
                      portEnd:
                        maximum: 65535
                        minimum: 1
                        type: integer
                      portStart:
                        maximum: 65535
                        minimum: 1
                        type: integer
                      protocol:
                        enum:
                          - TCP
                          - UDP
                        type: string
                    type: object
                  type: array
                applicationSecurityGroupsReferences:
                  items:
                    description: ResourceReference represents a resource reference, either to a Kubernetes resource or directly to an Azure resource via ARMID
                    properties:
                      armId:
                        description: |-
                          ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                          The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                          ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                        pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                        type: string
                      group:
                        description: Group is the Kubernetes group of the resource.
                        type: string
                      kind:
                        description: Kind is the Kubernetes kind of the resource.
                        type: string
                      name:
                        description: Name is the Kubernetes name of the resource.
                        type: string
                    type: object
                  type: array
                nodePublicIPTags:
                  items:
                    properties:
                      ipTagType:
                        type: string
                      tag:
                        type: string
                    type: object
                  type: array
              type: object
            nodeInitializationTaints:
              description: |-
                NodeInitializationTaints: These taints will not be reconciled by AKS and can be removed with a kubectl call. This field
                can be modified after node pool is created, but nodes will not be recreated with new taints until another operation that
                requires recreation (e.g. node image upgrade) happens. These taints allow for required configuration to run before the
                node is ready to accept workloads, for example 'key1=value1:NoSchedule' that then can be removed with `kubectl taint
                nodes node1 key1=value1:NoSchedule-`
              items:
                type: string
              type: array
            nodeLabels:
              additionalProperties:
                type: string
              description: 'NodeLabels: The node labels to be persisted across all nodes in agent pool.'
              type: object
            nodePublicIPPrefixReference:
              description: |-
                NodePublicIPPrefixReference: This is of the form:
                /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
              properties:
                armId:
                  description: |-
                    ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                    ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                  pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                  type: string
                group:
                  description: Group is the Kubernetes group of the resource.
                  type: string
                kind:
                  description: Kind is the Kubernetes kind of the resource.
                  type: string
                name:
                  description: Name is the Kubernetes name of the resource.
                  type: string
              type: object
            nodeTaints:
              description: 'NodeTaints: The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.'
              items:
                type: string
              type: array
            operatorSpec:
              description: |-
                OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not
                passed directly to Azure
              properties:
                configMapExpressions:
                  description: 'ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).'
                  items:
                    description: |-
                      DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                      be a secret or a configmap. The value of the expression is stored at the specified location in
                      the destination.
                    properties:
                      key:
                        description: |-
                          Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                          this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                          Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                          map[string]string.
                        type: string
                      name:
                        description: |-
                          Name is the name of the Kubernetes configmap or secret to write to.
                          The configmap or secret will be created in the same namespace as the resource.
                        type: string
                      value:
                        description: |-
                          Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                          on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                        type: string
                    required:
                      - name
                      - value
                    type: object
                  type: array
                secretExpressions:
                  description: 'SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).'
                  items:
                    description: |-
                      DestinationExpression is a CEL expression and a destination to store the result in. The destination may
                      be a secret or a configmap. The value of the expression is stored at the specified location in
                      the destination.
                    properties:
                      key:
                        description: |-
                          Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string
                          this is required to identify what key to write to. If the CEL expression in Value returns a map[string]string
                          Key must not be set, instead the keys written will be determined dynamically based on the keys of the resulting
                          map[string]string.
                        type: string
                      name:
                        description: |-
                          Name is the name of the Kubernetes configmap or secret to write to.
                          The configmap or secret will be created in the same namespace as the resource.
                        type: string
                      value:
                        description: |-
                          Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information
                          on CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/
                        type: string
                    required:
                      - name
                      - value
                    type: object
                  type: array
              type: object
            orchestratorVersion:
              description: |-
                OrchestratorVersion: Both patch version <major.minor.patch> and <major.minor> are supported. When <major.minor> is
                specified, the latest supported patch version is chosen automatically. Updating the agent pool with the same
                <major.minor> once it has been created will not trigger an upgrade, even if a newer patch version is available. As a
                best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version
                must have the same major version as the control plane. The node pool minor version must be within two minor versions of
                the control plane version. The node pool version cannot be greater than the control plane version. For more information
                see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
              type: string
            osDiskSizeGB:
              maximum: 2048
              minimum: 0
              type: integer
            osDiskType:
              description: |-
                OsDiskType: The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested
                OSDiskSizeGB. Otherwise,  defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral
                OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).
              enum:
                - Ephemeral
                - Managed
              type: string
            osSKU:
              description: |-
                OsSKU: Specifies the OS SKU used by the agent pool. If not specified, the default is Ubuntu if OSType=Linux or
                Windows2019 if  OSType=Windows. And the default Windows OSSKU will be changed to Windows2022 after Windows2019 is
                deprecated.
              enum:
                - AzureLinux
                - CBLMariner
                - Mariner
                - Ubuntu
                - Windows2019
                - Windows2022
                - WindowsAnnual
              type: string
            osType:
              description: 'OsType: The operating system type. The default is Linux.'
              enum:
                - Linux
                - Windows
              type: string
            owner:
              description: |-
                Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also
                controls the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a
                reference to a containerservice.azure.com/ManagedCluster resource
              properties:
                armId:
                  pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                  type: string
                name:
                  description: This is the name of the Kubernetes resource to reference.
                  type: string
              type: object
            podSubnetReference:
              description: |-
                PodSubnetReference: If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details).
                This is of the form:
                /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
              properties:
                armId:
                  description: |-
                    ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                    ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                  pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                  type: string
                group:
                  description: Group is the Kubernetes group of the resource.
                  type: string
                kind:
                  description: Kind is the Kubernetes kind of the resource.
                  type: string
                name:
                  description: Name is the Kubernetes name of the resource.
                  type: string
              type: object
            powerState:
              description: |-
                PowerState: When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this
                field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only
                be stopped if it is Running and provisioning state is Succeeded
              properties:
                code:
                  enum:
                    - Running
                    - Stopped
                  type: string
              type: object
            proximityPlacementGroupReference:
              description: 'ProximityPlacementGroupReference: The ID for Proximity Placement Group.'
              properties:
                armId:
                  description: |-
                    ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                    ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                  pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                  type: string
                group:
                  description: Group is the Kubernetes group of the resource.
                  type: string
                kind:
                  description: Kind is the Kubernetes kind of the resource.
                  type: string
                name:
                  description: Name is the Kubernetes name of the resource.
                  type: string
              type: object
            scaleDownMode:
              description: 'ScaleDownMode: This also effects the cluster autoscaler behavior. If not specified, it defaults to Delete.'
              enum:
                - Deallocate
                - Delete
              type: string
            scaleSetEvictionPolicy:
              description: |-
                ScaleSetEvictionPolicy: This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is
                'Delete'.
              enum:
                - Deallocate
                - Delete
              type: string
            scaleSetPriority:
              description: 'ScaleSetPriority: The Virtual Machine Scale Set priority. If not specified, the default is ''Regular''.'
              enum:
                - Regular
                - Spot
              type: string
            securityProfile:
              description: 'SecurityProfile: The security settings of an agent pool.'
              properties:
                enableSecureBoot:
                  type: boolean
                enableVTPM:
                  type: boolean
                sshAccess:
                  enum:
                    - Disabled
                    - LocalUser
                  type: string
              type: object
            spotMaxPrice:
              description: |-
                SpotMaxPrice: Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any
                on-demand price. For more details on spot pricing, see [spot VMs
                pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
              type: number
            tags:
              additionalProperties:
                type: string
              description: 'Tags: The tags to be persisted on the agent pool virtual machine scale set.'
              type: object
            type:
              description: 'Type: The type of Agent Pool.'
              enum:
                - AvailabilitySet
                - VirtualMachineScaleSets
                - VirtualMachines
              type: string
            upgradeSettings:
              description: 'UpgradeSettings: Settings for upgrading the agentpool'
              properties:
                drainTimeoutInMinutes:
                  maximum: 1440
                  minimum: 1
                  type: integer
                maxSurge:
                  type: string
                nodeSoakDurationInMinutes:
                  maximum: 30
                  minimum: 0
                  type: integer
              type: object
            virtualMachineNodesStatus:
              items:
                properties:
                  count:
                    type: integer
                  size:
                    type: string
                type: object
              type: array
            virtualMachinesProfile:
              description: 'VirtualMachinesProfile: Specifications on VirtualMachines agent pool.'
              properties:
                scale:
                  properties:
                    manual:
                      items:
                        properties:
                          count:
                            maximum: 1000
                            minimum: 0
                            type: integer
                          sizes:
                            items:
                              type: string
                            type: array
                        type: object
                      type: array
                  type: object
              type: object
            vmSize:
              description: |-
                VmSize: VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods
                might fail to run correctly. For more details on restricted VM sizes, see:
                https://docs.microsoft.com/azure/aks/quotas-skus-regions
              type: string
            vnetSubnetReference:
              description: |-
                VnetSubnetReference: If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is
                specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form:
                /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
              properties:
                armId:
                  description: |-
                    ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.
                    The /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level
                    ARMID is mutually exclusive with Group, Kind, Namespace and Name.
                  pattern: (?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)
                  type: string
                group:
                  description: Group is the Kubernetes group of the resource.
                  type: string
                kind:
                  description: Kind is the Kubernetes kind of the resource.
                  type: string
                name:
                  description: Name is the Kubernetes name of the resource.
                  type: string
              type: object
            windowsProfile:
              description: 'WindowsProfile: The Windows agent pool''s specific profile.'
              properties:
                disableOutboundNat:
                  type: boolean
              type: object
            workloadRuntime:
              description: 'WorkloadRuntime: Determines the type of workload a node can run.'
              enum:
                - KataMshvVmIsolation
                - OCIContainer
                - WasmWasi
              type: string
          required:
            - owner
          type: object
        status:
          properties:
            artifactStreamingProfile:
              description: 'ArtifactStreamingProfile: Configuration for using artifact streaming on AKS.'
              properties:
                enabled:
                  type: boolean
              type: object
            availabilityZones:
              description: |-
                AvailabilityZones: The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType
                property is 'VirtualMachineScaleSets'.
              items:
                type: string
              type: array
            capacityReservationGroupID:
              description: 'CapacityReservationGroupID: AKS will associate the specified agent pool with the Capacity Reservation Group.'
              type: string
            conditions:
              description: 'Conditions: The observed state of the resource'
              items:
                description: Condition defines an extension to status (an observation) of a resource
                properties:
                  lastTransitionTime:
                    description: LastTransitionTime is the last time the condition transitioned from one status to another.
                    format: date-time
                    type: string
                  message:
                    description: Message is a human readable message indicating details about the transition. This field may be empty.
                    type: string
                  observedGeneration:
                    description: |-
                      ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if
                      .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date
                      with respect to the current state of the instance.
                    format: int64
                    type: integer
                  reason:
                    description: |-
                      Reason for the condition's last transition.
                      Reasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.
                    type: string
                  severity:
                    description: |-
                      Severity with which to treat failures of this type of condition.
                      For conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True
                      For conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.
                      This is omitted in all cases when Status == Unknown
                    type: string
                  status:
                    description: Status of the condition, one of True, False, or Unknown.
                    type: string
                  type:
                    description: Type of condition.
                    type: string
                required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                type: object
              type: array
            count:
              description: |-
                Count: Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive)
                for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.
              type: integer
            creationData:
              description: |-
                CreationData: CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using
                a snapshot.
              properties:
                sourceResourceId:
                  type: string
              type: object
            currentOrchestratorVersion:
              description: |-
                CurrentOrchestratorVersion: If orchestratorVersion was a fully specified version <major.minor.patch>, this field will be
                exactly equal to it. If orchestratorVersion was <major.minor>, this field will contain the full <major.minor.patch>
                version being used.
              type: string
            enableAutoScaling:
              description: 'EnableAutoScaling: Whether to enable auto-scaler'
              type: boolean
            enableCustomCATrust:
              description: |-
                EnableCustomCATrust: When set to true, AKS adds a label to the node indicating that the feature is enabled and deploys a
                daemonset along with host services to sync custom certificate authorities from user-provided list of base64 encoded
                certificates into node trust stores. Defaults to false.
              type: boolean
            enableEncryptionAtHost:
              description: |-
                EnableEncryptionAtHost: This is only supported on certain VM sizes and in certain Azure regions. For more information,
                see: https://docs.microsoft.com/azure/aks/enable-host-encryption
              type: boolean
            enableFIPS:
              description: |-
                EnableFIPS: See [Add a FIPS-enabled node
                pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more
                details.
              type: boolean
            enableNodePublicIP:
              description: |-
                EnableNodePublicIP: Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses.
                A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine
                to minimize hops. For more information see [assigning a public IP per
                node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The
                default is false.
              type: boolean
            enableUltraSSD:
              description: 'EnableUltraSSD: Whether to enable UltraSSD'
              type: boolean
            gpuInstanceProfile:
              description: 'GpuInstanceProfile: GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.'
              type: string
            gpuProfile:
              description: 'GpuProfile: The GPU settings of an agent pool.'
              properties:
                installGPUDriver:
                  type: boolean
              type: object
            hostGroupID:
              description: |-
                HostGroupID: This is of the form:
                /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}.
                For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).
              type: string
            id:
              description: 'Id: Resource ID.'
              type: string
            kubeletConfig:
              description: 'KubeletConfig: The Kubelet configuration on the agent pool nodes.'
              properties:
                allowedUnsafeSysctls:
                  items:
                    type: string
                  type: array
                containerLogMaxFiles:
                  type: integer
                containerLogMaxSizeMB:
                  type: integer
                cpuCfsQuota:
                  type: boolean
                cpuCfsQuotaPeriod:
                  type: string
                cpuManagerPolicy:
                  type: string
                failSwapOn:
                  type: boolean
                imageGcHighThreshold:
                  type: integer
                imageGcLowThreshold:
                  type: integer
                podMaxPids:
                  type: integer
                topologyManagerPolicy:
                  type: string
              type: object
            kubeletDiskType:
              description: |-
                KubeletDiskType: Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral
                storage.
              type: string
            linuxOSConfig:
              description: 'LinuxOSConfig: The OS configuration of Linux agent nodes.'
              properties:
                swapFileSizeMB:
                  type: integer
                sysctls:
                  properties:
                    fsAioMaxNr:
                      type: integer
                    fsFileMax:
                      type: integer
                    fsInotifyMaxUserWatches:
                      type: integer
                    fsNrOpen:
                      type: integer
                    kernelThreadsMax:
                      type: integer
                    netCoreNetdevMaxBacklog:
                      type: integer
                    netCoreOptmemMax:
                      type: integer
                    netCoreRmemDefault:
                      type: integer
                    netCoreRmemMax:
                      type: integer
                    netCoreSomaxconn:
                      type: integer
                    netCoreWmemDefault:
                      type: integer
                    netCoreWmemMax:
                      type: integer
                    netIpv4IpLocalPortRange:
                      type: string
                    netIpv4NeighDefaultGcThresh1:
                      type: integer
                    netIpv4NeighDefaultGcThresh2:
                      type: integer
                    netIpv4NeighDefaultGcThresh3:
                      type: integer
                    netIpv4TcpFinTimeout:
                      type: integer
                    netIpv4TcpKeepaliveProbes:
                      type: integer
                    netIpv4TcpKeepaliveTime:
                      type: integer
                    netIpv4TcpMaxSynBacklog:
                      type: integer
                    netIpv4TcpMaxTwBuckets:
                      type: integer
                    netIpv4TcpTwReuse:
                      type: boolean
                    netIpv4TcpkeepaliveIntvl:
                      type: integer
                    netNetfilterNfConntrackBuckets:
                      type: integer
                    netNetfilterNfConntrackMax:
                      type: integer
                    vmMaxMapCount:
                      type: integer
                    vmSwappiness:
                      type: integer
                    vmVfsCachePressure:
                      type: integer
                  type: object
                transparentHugePageDefrag:
                  type: string
                transparentHugePageEnabled:
                  type: string
              type: object
            maxCount:
              description: 'MaxCount: The maximum number of nodes for auto-scaling'
              type: integer
            maxPods:
              description: 'MaxPods: The maximum number of pods that can run on a node.'
              type: integer
            messageOfTheDay:
              description: |-
                MessageOfTheDay: A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of
                the message of the day for Linux nodes. It must not be specified for Windows nodes. It must be a static string (i.e.,
                will be printed raw and not be executed as a script).
              type: string
            minCount:
              description: 'MinCount: The minimum number of nodes for auto-scaling'
              type: integer
            mode:
              description: |-
                Mode: A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool
                restrictions  and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools
              type: string
            name:
              description: 'Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.'
              type: string
            networkProfile:
              description: 'NetworkProfile: Network-related settings of an agent pool.'
              properties:
                allowedHostPorts:
                  items:
                    properties:
                      portEnd:
                        type: integer
                      portStart:
                        type: integer
                      protocol:
                        type: string
                    type: object
                  type: array
                applicationSecurityGroups:
                  items:
                    type: string
                  type: array
                nodePublicIPTags:
                  items:
                    properties:
                      ipTagType:
                        type: string
                      tag:
                        type: string
                    type: object
                  type: array
              type: object
            nodeImageVersion:
              description: 'NodeImageVersion: The version of node image'
              type: string
            nodeInitializationTaints:
              description: |-
                NodeInitializationTaints: These taints will not be reconciled by AKS and can be removed with a kubectl call. This field
                can be modified after node pool is created, but nodes will not be recreated with new taints until another operation that
                requires recreation (e.g. node image upgrade) happens. These taints allow for required configuration to run before the
                node is ready to accept workloads, for example 'key1=value1:NoSchedule' that then can be removed with `kubectl taint
                nodes node1 key1=value1:NoSchedule-`
              items:
                type: string
              type: array
            nodeLabels:
              additionalProperties:
                type: string
              description: 'NodeLabels: The node labels to be persisted across all nodes in agent pool.'
              type: object
            nodePublicIPPrefixID:
              description: |-
                NodePublicIPPrefixID: This is of the form:
                /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}
              type: string
            nodeTaints:
              description: 'NodeTaints: The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.'
              items:
                type: string
              type: array
            orchestratorVersion:
              description: |-
                OrchestratorVersion: Both patch version <major.minor.patch> and <major.minor> are supported. When <major.minor> is
                specified, the latest supported patch version is chosen automatically. Updating the agent pool with the same
                <major.minor> once it has been created will not trigger an upgrade, even if a newer patch version is available. As a
                best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version
                must have the same major version as the control plane. The node pool minor version must be within two minor versions of
                the control plane version. The node pool version cannot be greater than the control plane version. For more information
                see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).
              type: string
            osDiskSizeGB:
              type: integer
            osDiskType:
              description: |-
                OsDiskType: The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested
                OSDiskSizeGB. Otherwise,  defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral
                OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).
              type: string
            osSKU:
              description: |-
                OsSKU: Specifies the OS SKU used by the agent pool. If not specified, the default is Ubuntu if OSType=Linux or
                Windows2019 if  OSType=Windows. And the default Windows OSSKU will be changed to Windows2022 after Windows2019 is
                deprecated.
              type: string
            osType:
              description: 'OsType: The operating system type. The default is Linux.'
              type: string
            podSubnetID:
              description: |-
                PodSubnetID: If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is
                of the form:
                /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
              type: string
            powerState:
              description: |-
                PowerState: When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this
                field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only
                be stopped if it is Running and provisioning state is Succeeded
              properties:
                code:
                  type: string
              type: object
            properties_type:
              description: 'PropertiesType: The type of Agent Pool.'
              type: string
            provisioningState:
              description: 'ProvisioningState: The current deployment or provisioning state.'
              type: string
            proximityPlacementGroupID:
              description: 'ProximityPlacementGroupID: The ID for Proximity Placement Group.'
              type: string
            scaleDownMode:
              description: 'ScaleDownMode: This also effects the cluster autoscaler behavior. If not specified, it defaults to Delete.'
              type: string
            scaleSetEvictionPolicy:
              description: |-
                ScaleSetEvictionPolicy: This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is
                'Delete'.
              type: string
            scaleSetPriority:
              description: 'ScaleSetPriority: The Virtual Machine Scale Set priority. If not specified, the default is ''Regular''.'
              type: string
            securityProfile:
              description: 'SecurityProfile: The security settings of an agent pool.'
              properties:
                enableSecureBoot:
                  type: boolean
                enableVTPM:
                  type: boolean
                sshAccess:
                  type: string
              type: object
            spotMaxPrice:
              description: |-
                SpotMaxPrice: Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any
                on-demand price. For more details on spot pricing, see [spot VMs
                pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)
              type: number
            tags:
              additionalProperties:
                type: string
              description: 'Tags: The tags to be persisted on the agent pool virtual machine scale set.'
              type: object
            type:
              description: 'Type: Resource type'
              type: string
            upgradeSettings:
              description: 'UpgradeSettings: Settings for upgrading the agentpool'
              properties:
                drainTimeoutInMinutes:
                  type: integer
                maxSurge:
                  type: string
                nodeSoakDurationInMinutes:
                  type: integer
              type: object
            virtualMachineNodesStatus:
              items:
                properties:
                  count:
                    type: integer
                  size:
                    type: string
                type: object
              type: array
            virtualMachinesProfile:
              description: 'VirtualMachinesProfile: Specifications on VirtualMachines agent pool.'
              properties:
                scale:
                  properties:
                    manual:
                      items:
                        properties:
                          count:
                            type: integer
                          sizes:
                            items:
                              type: string
                            type: array
                        type: object
                      type: array
                  type: object
              type: object
            vmSize:
              description: |-
                VmSize: VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods
                might fail to run correctly. For more details on restricted VM sizes, see:
                https://docs.microsoft.com/azure/aks/quotas-skus-regions
              type: string
            vnetSubnetID:
              description: |-
                VnetSubnetID: If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified,
                this applies to nodes and pods, otherwise it applies to just nodes. This is of the form:
                /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}
              type: string
            windowsProfile:
              description: 'WindowsProfile: The Windows agent pool''s specific profile.'
              properties:
                disableOutboundNat:
                  type: boolean
              type: object
            workloadRuntime:
              description: 'WorkloadRuntime: Determines the type of workload a node can run.'
              type: string
          type: object
      type: object
