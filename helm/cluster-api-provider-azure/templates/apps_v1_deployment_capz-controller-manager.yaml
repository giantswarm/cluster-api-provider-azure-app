apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    aadpodidbinding: capz-controller-aadpodidentity-selector
    app.giantswarm.io/branch: '{{ .Values.project.branch }}'
    app.giantswarm.io/commit: '{{ .Values.project.commit }}'
    app.kubernetes.io/instance: '{{ .Release.Name }}'
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: cluster-api-provider-azure
    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
    application.giantswarm.io/team: '{{ index .Chart.Annotations "application.giantswarm.io/team"
      }}'
    cluster.x-k8s.io/provider: infrastructure-azure
    control-plane: capz-controller-manager
    helm.sh/chart: cluster-api-provider-azure
  name: capz-controller-manager
  namespace: '{{ .Release.Namespace }}'
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-azure
      control-plane: capz-controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        aadpodidbinding: capz-controller-aadpodidentity-selector
        azure.workload.identity/use: "true"
        cluster.x-k8s.io/provider: infrastructure-azure
        control-plane: capz-controller-manager
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: Exists
            weight: 10
      containers:
      - args:
        - --leader-elect={{- if eq .Values.provider.flavor "capi" }}true{{ else }}false{{-
          end }}
        - --metrics-bind-addr=0.0.0.0:8080
        - --feature-gates=MachinePool=true
        - --watch-filter={{- include "deployment.args.watchfiltervalue" . }}
        - --v={{ .Values.controller.verbosity }}
        env:
        - name: AZURE_SUBSCRIPTION_ID
          valueFrom:
            secretKeyRef:
              key: azure.azureoperator.subscriptionid
              name: credential-default
        - name: AZURE_TENANT_ID
          valueFrom:
            secretKeyRef:
              key: azure.azureoperator.tenantid
              name: credential-default
        - name: AZURE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              key: azure.azureoperator.clientid
              name: credential-default
        - name: AZURE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: azure.azureoperator.clientsecret
              name: credential-default
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: '{{.Values.image.registry}}/{{.Values.image.name}}:{{.Values.image.tag}}'
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
          initialDelaySeconds: 10
          periodSeconds: 10
        name: manager
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
          initialDelaySeconds: 10
          periodSeconds: 10
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsUser: 65532
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /var/run/secrets/azure/tokens
          name: azure-identity-token
          readOnly: true
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: capz-manager
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      - effect: NoSchedule
        key: node.cluster.x-k8s.io/uninitialized
        operator: Exists
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: capz-webhook-service-cert
      - name: azure-identity-token
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              audience: api://AzureADTokenExchange
              expirationSeconds: 3600
              path: azure-identity-token
